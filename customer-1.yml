---
-   name: Deploy 
    hosts: apic
    connection: local
    gather_facts: no

    vars:
      inventory_hostname: 172.31.186.184
      user: admin
      passwd: Cisco!123
      #tenant: QA-Tenant-1
      #application_profile: PCI
      #epg_name: PCI-APP
      #path: topology/pod-1/paths-101/pathep-[eth1/26]
      tenant: 
        - { name: QA-Tenant-2121 } 
      application_profile: 
        - { name: 'PCI' }
        - { name: 'NON-PCI' }
      epg_name:
        - { name: 'PCI-WWW', bd: 'BD-902', state: present }
        - { name: 'PCI-APP', bd: 'BD-903', state: present }
        - { name: 'PCI-DB', bd: 'BD-904', state: present }
        - { name: 'NON-PCI-910', bd: 'BD-910', state: present }
        - { name: 'NON-PCI-911', bd: 'BD-910', state: present }
      path:
        - { name: "topology/pod-1/paths-101/pathep-[eth1/24]" }
      bd:
         - { name: 'BD-902', state: present , subnet: }
         - { name: 'BD-903', state: present , subnet: }
         - { name: 'BD-903', state: present , subnet: }
         - { name: 'BD-904', state: present , subnet: }
         - { name: 'BD-905', state: present , subnet: }
         - { name: 'BD-910', state: present , subnet: 192.168.10.1/24 }
         - { name: 'BD-911', state: present , subnet: 192.168.11.1/24 }



    tasks:

        - name: create tenant
          aci_tenant:
              name: "{{ item.name }}"
              descr: 'tenant by Ansbile'
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_items: "{{ tenant }}"
              
        # - name: Configuring Vlan on all Switches
        #   nxos_vlan: vlan_id=11 name=example-1-2 state=present provider="{{ creds }}"

        # - name: create tenant
        #   aci_tenant: name=walmart descr='tenant by Ansible' state=present host={{ inventory_hostname }} username=admin password=rovikumar

        # - name: create ANP
        - name: create VRF for L3 BD
          aci_context:
              name: VRF-QA-1
              tenant: common
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"

        - name: create VRF for L3 BD
          aci_context:
              name: VRF-Non-PCI
              tenant: "{{ item.name }}"
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_items: "{{ tenant }}"


        - name: create VRF for PCI (L2 BD)
          aci_context:
              name: VRF-PCI
              tenant: "{{ item.name }}"
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_items: "{{ tenant }}"

        - name: create BD for PCI
          aci_bridge_domain:
              name: "{{ item[0].name }}"
              context: VRF-PCI
              tenant: "{{ item[1].name }}"
              state: "{{ item[0].state }}"
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_nested:
             - "{{ bd }}"
             - "{{ tenant}}"
          when: 'item[0].subnet is none ' 


        - name: create BD for non-PCI
          aci_bridge_domain:
              name: "{{ item[1].name }}"
              context: VRF-Non-PCI
              tenant: "{{ item[0].name }}"
              subnet: "{{ item[1].subnet }}"
              state: "{{ item[1].state }}"
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_nested:
             - "{{ tenant }}"
             - "{{ bd }}"
          when: 'item[1].subnet is not none '

        #   aci_anp: name=Legacy tenant=walmart state=present host={{ inventory_hostname }} username={{ user }} password={{ pass }}
        - name: create ANP for PCI and NON-PCI traffic
          aci_anp:
              name: "{{ item[0].name }}"
              tenant: "{{ item[1].name }}"
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_nested:
             - "{{ application_profile }}"
             - "{{ tenant }}"


    ## creating EPGs for PCI traffic; for L2 , there is no contracts; communication happens via FW
        - aci_epg:
            name: "{{ item[1].name }}"
            bridge_domain: "{{ item[1].bd }}"
            anp: PCI
            tenant: "{{ item[0].name }}"
            state: "{{ item[1].state }}"
            host: "{{ inventory_hostname }}"
            username: "{{ user }}"
            password: "{{ passwd }}"
          with_nested:
            - "{{ tenant }}"
            - "{{ epg_name }}"
          when: '"NON" not in item[1].name'

        #   aci_anp: name=Legacy tenant=walmart state=present host={{ inventory_hostname }} username={{ user }} password={{ pass }}
        - name: create ANP2 for non PCI traffic
          aci_anp:
              name: NON-PCI
              tenant: "{{ item.name }}"
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_items:
            - "{{ tenant }}"

    #          - aci_contract: name=web-contract descr='web contracy by ansible' tenant=customer_1 host={{ inventory_hostname }} username={{ user }} password={{ pass }}
        - name: create Contract (any any)
          aci_contract:
              name: ANY
              tenant: "{{ item.name }}"
              state: present
              host: "{{ inventory_hostname }}"
              username: "{{ user }}"
              password: "{{ passwd }}"
          with_items:
            - "{{ tenant }}"

    ## creating EPGs for PCI traffic; for L2 , there is no contracts; communication happens via FW
        - aci_epg:
            name: "{{ item[1].name }}"
            bridge_domain: "{{ item[1].bd }}"
            consumed_contracts: ANY
            provided_contracts: ANY
            anp: NON-PCI
            tenant: "{{ item[0].name }}"
            state: "{{ item[1].state }}"
            host: "{{ inventory_hostname }}"
            username: "{{ user }}"
            password: "{{ passwd }}"
          with_nested:
             - "{{ tenant }}"
             - "{{ epg_name }}"
          when: '"NON" in item[1].name'

    ## create  static EPG binding
        - aci_epg_static_binding: 
            action: "post"
            tenant_name: "{{ item[0].name }}"
            application_profile: "{{ item[1].name }}" 
            epg_name: "{{ item[2].name }}" 
            description: "static binding created by ansible" 
            path: "{{ item[3].name }}" 
            encap: "902" 
            mode: "regular" 
            immediacy: "immediate"
            host: "{{ inventory_hostname }}" 
            username: "{{ user }}" 
            password: "{{ pass }}" 
          with_nested: 
            - "{{ tenant }}"
            - "{{ application_profile }}"
            - "{{ epg_name }}"
            - "{{ path }}"
          when: '"NON" not in item[2].name'


